var _user$project$Views$studentListItemRemoved = function (student) {
	var lastname = A2(_elm_lang$core$String$left, 1, student.secondname);
	var firstname = function () {
		var _p0 = _elm_lang$core$List$head(
			A2(_elm_lang$core$String$split, ' ', student.firstname));
		if (_p0.ctor === 'Nothing') {
			return 'No first name';
		} else {
			return _p0._0;
		}
	}();
	return A2(
		_rundis$elm_bootstrap$Bootstrap_ListGroup$li,
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_ListGroup$attrs(
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('justify-content-between'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					firstname,
					A2(_elm_lang$core$Basics_ops['++'], ' ', lastname))),
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Button$button,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Types$AddStudent(student)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('float-right'),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('+'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Views$studentListRemoved = function (students) {
	return _rundis$elm_bootstrap$Bootstrap_ListGroup$ul(
		A2(_elm_lang$core$List$map, _user$project$Views$studentListItemRemoved, students));
};
var _user$project$Views$studentListItem = function (student) {
	var lastname = A2(_elm_lang$core$String$left, 1, student.secondname);
	var firstname = function () {
		var _p1 = _elm_lang$core$List$head(
			A2(_elm_lang$core$String$split, ' ', student.firstname));
		if (_p1.ctor === 'Nothing') {
			return 'No first name';
		} else {
			return _p1._0;
		}
	}();
	return A2(
		_rundis$elm_bootstrap$Bootstrap_ListGroup$li,
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_ListGroup$attrs(
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('justify-content-between'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					firstname,
					A2(_elm_lang$core$Basics_ops['++'], ' ', lastname))),
			_1: {
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Button$button,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Button$small,
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										_user$project$Types$RemoveStudent(student)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('float-right'),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('-'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Views$studentList = function (students) {
	return _rundis$elm_bootstrap$Bootstrap_ListGroup$ul(
		A2(_elm_lang$core$List$map, _user$project$Views$studentListItem, students));
};
var _user$project$Views$schoolClassSelect = function (schoolClass) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form_Select$item,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(schoolClass.name),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views$schoolSelect = function (school) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form_Select$item,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(school.name),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views$numberSelect = function (number) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Form_Select$item,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(number)),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views$customHandler = F2(
	function (message, input) {
		var _p2 = _elm_lang$core$String$toInt(input);
		if (_p2.ctor === 'Err') {
			return _user$project$Types$DebugMessage(_p2._0);
		} else {
			return message(_p2._0);
		}
	});
var _user$project$Views$matrixStudentView = function (student) {
	var lastname = A2(_elm_lang$core$String$left, 1, student.secondname);
	var firstname = function () {
		var _p3 = _elm_lang$core$List$head(
			A2(_elm_lang$core$String$split, ' ', student.firstname));
		if (_p3.ctor === 'Nothing') {
			return 'No first name';
		} else {
			return _p3._0;
		}
	}();
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$col,
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$attrs(
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('text-center'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					firstname,
					A2(_elm_lang$core$Basics_ops['++'], ' ', lastname))),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views$studentTd = F2(
	function (dnd, student) {
		var lastname = A2(_elm_lang$core$String$left, 1, student.secondname);
		var firstname = function () {
			var _p4 = _elm_lang$core$List$head(
				A2(_elm_lang$core$String$split, ' ', student.firstname));
			if (_p4.ctor === 'Nothing') {
				return 'No first name';
			} else {
				return _p4._0;
			}
		}();
		var dndattrs = {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
				A2(_elm_lang$html$Html_Attributes$attribute, 'draggable', 'true')),
			_1: {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
					_user$project$Util_DragAndDrop$onDragStart(
						_user$project$Types$Move(student))),
				_1: {
					ctor: '::',
					_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
						A2(_elm_lang$html$Html_Attributes$attribute, 'ondragstart', 'event.dataTransfer.setData(\"text/plain\", \"dummy\")')),
					_1: {
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
							_user$project$Util_DragAndDrop$onDrop(
								_user$project$Types$SwapStudents(student))),
						_1: {
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
								_user$project$Util_DragAndDrop$onDragEnd(_user$project$Types$CancelMove)),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		};
		var nondndattrs = {ctor: '[]'};
		var cellattrs = function () {
			var _p5 = dnd;
			if (_p5 === false) {
				return nondndattrs;
			} else {
				return A2(_elm_lang$core$Basics_ops['++'], nondndattrs, dndattrs);
			}
		}();
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Table$td,
			cellattrs,
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						firstname,
						A2(_elm_lang$core$Basics_ops['++'], ' ', lastname))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Views$groupMarkerTd = function (marker) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Table$td,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(marker),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views$groupTr = F2(
	function (dnd, group) {
		var color = function () {
			var _p6 = group.color;
			if (_p6.ctor === 'Nothing') {
				return 'white';
			} else {
				return _p6._0;
			}
		}();
		var dndattrs = {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Table$rowAttr(
				A2(_elm_lang$html$Html_Attributes$attribute, 'ondragover', 'return false')),
			_1: {
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Table$rowAttr(
					_user$project$Util_DragAndDrop$onDrop(
						_user$project$Types$DropOn(group))),
				_1: {ctor: '[]'}
			}
		};
		var nondndattrs = {
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Table$rowAttr(
				_elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'background-color', _1: color},
						_1: {ctor: '[]'}
					})),
			_1: {ctor: '[]'}
		};
		var rowattrs = function () {
			var _p7 = dnd;
			if (_p7 === false) {
				return nondndattrs;
			} else {
				return A2(_elm_lang$core$Basics_ops['++'], nondndattrs, dndattrs);
			}
		}();
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Table$tr,
			rowattrs,
			A2(
				_elm_lang$core$Basics_ops['++'],
				{
					ctor: '::',
					_0: _user$project$Views$groupMarkerTd(
						_user$project$Util_Util$groupNumberToGroupMarker(group.number)),
					_1: {ctor: '[]'}
				},
				A3(
					_elm_lang$core$List$map2,
					_user$project$Views$studentTd,
					A2(
						_elm_lang$core$List$repeat,
						_elm_lang$core$List$length(group.students),
						dnd),
					group.students)));
	});
var _user$project$Views$maxtrixTableHeaderView = function (number) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Table$th,
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_Table$cellAttr(
				_elm_lang$html$Html_Attributes$class('text-center')),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(number)),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views$matrixGroupView = F2(
	function (dnd, model) {
		var maybeMaxStudents = _elm_lang$core$List$maximum(
			A2(
				_elm_lang$core$List$map,
				function (gr) {
					return _elm_lang$core$List$length(gr.students);
				},
				model.groups));
		var maxStudents = function () {
			var _p8 = maybeMaxStudents;
			if (_p8.ctor === 'Nothing') {
				return 0;
			} else {
				return _p8._0;
			}
		}();
		var tableheaders = function () {
			var _p9 = model.showTableHeaderModal;
			if (_p9 === false) {
				return {ctor: '[]'};
			} else {
				return A2(
					_elm_lang$core$List$map,
					_user$project$Views$maxtrixTableHeaderView,
					A2(_elm_lang$core$List$range, 1, maxStudents));
			}
		}();
		var groups = A2(_elm_lang$core$Basics$max, 1, model.numberOfGroups);
		var numberOfStudents = _elm_lang$core$Basics$ceiling(
			_elm_lang$core$Basics$toFloat(
				_elm_lang$core$List$length(model.students)) / _elm_lang$core$Basics$toFloat(groups));
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$col,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _rundis$elm_bootstrap$Bootstrap_Table$simpleTable(
					{
						ctor: '_Tuple2',
						_0: _rundis$elm_bootstrap$Bootstrap_Table$simpleThead(
							A2(
								_elm_lang$core$Basics_ops['++'],
								{
									ctor: '::',
									_0: A2(
										_rundis$elm_bootstrap$Bootstrap_Table$th,
										{ctor: '[]'},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								},
								tableheaders)),
						_1: A2(
							_rundis$elm_bootstrap$Bootstrap_Table$tbody,
							{ctor: '[]'},
							A3(
								_elm_lang$core$List$map2,
								_user$project$Views$groupTr,
								A2(
									_elm_lang$core$List$repeat,
									_elm_lang$core$List$length(model.groups),
									dnd),
								model.groups))
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Views$studentView = F2(
	function (dnd, student) {
		var lastname = A2(_elm_lang$core$String$left, 1, student.secondname);
		var firstname = function () {
			var _p10 = _elm_lang$core$List$head(
				A2(_elm_lang$core$String$split, ' ', student.firstname));
			if (_p10.ctor === 'Nothing') {
				return 'No first name';
			} else {
				return _p10._0;
			}
		}();
		var dndattrs = {
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'draggable', 'true'),
			_1: {
				ctor: '::',
				_0: _user$project$Util_DragAndDrop$onDragEnd(_user$project$Types$CancelMove),
				_1: {
					ctor: '::',
					_0: _user$project$Util_DragAndDrop$onDragStart(
						_user$project$Types$Move(student)),
					_1: {
						ctor: '::',
						_0: _user$project$Util_DragAndDrop$onDrop(
							_user$project$Types$SwapStudents(student)),
						_1: {
							ctor: '::',
							_0: A2(_elm_lang$html$Html_Attributes$attribute, 'ondragstart', 'event.dataTransfer.setData(\"text/plain\", \"dummy\")'),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		};
		var nondndattrs = {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('text-center'),
			_1: {ctor: '[]'}
		};
		var divattrs = function () {
			var _p11 = dnd;
			if (_p11 === false) {
				return nondndattrs;
			} else {
				return A2(_elm_lang$core$Basics_ops['++'], nondndattrs, dndattrs);
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			divattrs,
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						firstname,
						A2(_elm_lang$core$Basics_ops['++'], ' ', lastname))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Views$nonMatrixGroupTitle = F2(
	function (dnd, group) {
		var dndattrs = {
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'ondragover', 'return false'),
			_1: {
				ctor: '::',
				_0: _user$project$Util_DragAndDrop$onDrop(
					_user$project$Types$DropOn(group)),
				_1: {ctor: '[]'}
			}
		};
		var nondndattrs = {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('text-center'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-bottom', _1: '5px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'text-decoration', _1: 'underline'},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		};
		var divattrs = function () {
			var _p12 = dnd;
			if (_p12 === false) {
				return nondndattrs;
			} else {
				return A2(_elm_lang$core$Basics_ops['++'], nondndattrs, dndattrs);
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			divattrs,
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Group ',
						_user$project$Util_Util$groupNumberToGroupMarker(group.number))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Views$nonmatrixGroupView = F2(
	function (dnd, group) {
		var color = function () {
			var _p13 = group.color;
			if (_p13.ctor === 'Nothing') {
				return 'white';
			} else {
				return _p13._0;
			}
		}();
		var dndattrs = {
			ctor: '::',
			_0: A2(_elm_lang$html$Html_Attributes$attribute, 'ondragover', 'return false'),
			_1: {
				ctor: '::',
				_0: _user$project$Util_DragAndDrop$onDrop(
					_user$project$Types$DropOn(group)),
				_1: {ctor: '[]'}
			}
		};
		var nondndattrs = {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid black'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'background-color', _1: color},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-bottom', _1: '10px'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'min-width', _1: '120px'},
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		};
		var divattrs = function () {
			var _p14 = dnd;
			if (_p14 === false) {
				return nondndattrs;
			} else {
				return A2(_elm_lang$core$Basics_ops['++'], nondndattrs, dndattrs);
			}
		}();
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$col,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					divattrs,
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: A2(_user$project$Views$nonMatrixGroupTitle, dnd, group),
							_1: {ctor: '[]'}
						},
						A3(
							_elm_lang$core$List$map2,
							_user$project$Views$studentView,
							A2(
								_elm_lang$core$List$repeat,
								_elm_lang$core$List$length(group.students),
								dnd),
							group.students))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Views$fullClassView = F2(
	function (dnd, model) {
		var _p15 = model.matrix;
		if (_p15 === false) {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Grid$row,
				{ctor: '[]'},
				A3(
					_elm_lang$core$List$map2,
					_user$project$Views$nonmatrixGroupView,
					A2(
						_elm_lang$core$List$repeat,
						_elm_lang$core$List$length(model.groups),
						dnd),
					model.groups));
		} else {
			return A2(
				_rundis$elm_bootstrap$Bootstrap_Grid$row,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(_user$project$Views$matrixGroupView, dnd, model),
					_1: {ctor: '[]'}
				});
		}
	});
var _user$project$Views$exportModal = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Modal$view,
		model.exportVisible,
		A3(
			_rundis$elm_bootstrap$Bootstrap_Modal$footer,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Button$button,
					{
						ctor: '::',
						_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Types$Export(_rundis$elm_bootstrap$Bootstrap_Modal$hiddenState)),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('close'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$custom,
						{
							ctor: '::',
							_0: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$onCheck(_user$project$Types$ToggleTableHeader),
							_1: {
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$disabled(!model.matrix),
								_1: {ctor: '[]'}
							}
						},
						'Toggle Table header'),
					_1: {
						ctor: '::',
						_0: A2(
							_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$custom,
							{
								ctor: '::',
								_0: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$onCheck(_user$project$Types$ToggleMatrix),
								_1: {ctor: '[]'}
							},
							'Toggle Matrix'),
						_1: {ctor: '[]'}
					}
				}
			},
			A3(
				_rundis$elm_bootstrap$Bootstrap_Modal$body,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(_user$project$Views$fullClassView, false, model),
					_1: {ctor: '[]'}
				},
				A3(
					_rundis$elm_bootstrap$Bootstrap_Modal$h3,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Group export'),
						_1: {ctor: '[]'}
					},
					_rundis$elm_bootstrap$Bootstrap_Modal$large(
						_rundis$elm_bootstrap$Bootstrap_Modal$config(_user$project$Types$Export))))));
};
var _user$project$Views$view = function (model) {
	return A2(
		_rundis$elm_bootstrap$Bootstrap_Grid$container,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('maincontainer'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _rundis$elm_bootstrap$Bootstrap_CDN$stylesheet,
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$nav,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('navbar navbar-inverse navbar-fixed-top'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'lightblue'},
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h1,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('text-center'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Group Utility'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_rundis$elm_bootstrap$Bootstrap_Grid$row,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_rundis$elm_bootstrap$Bootstrap_Grid$col,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_rundis$elm_bootstrap$Bootstrap_Form$label,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Select school'),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_rundis$elm_bootstrap$Bootstrap_Form_Select$custom,
											{
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$onInput(_user$project$Types$SelectSchool),
												_1: {ctor: '[]'}
											},
											A2(_elm_lang$core$List$map, _user$project$Views$schoolSelect, model.schools)),
										_1: {
											ctor: '::',
											_0: A2(
												_rundis$elm_bootstrap$Bootstrap_Form$label,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Select class'),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Form_Select$custom,
													{
														ctor: '::',
														_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$onInput(_user$project$Types$SelectSchoolClass),
														_1: {ctor: '[]'}
													},
													A2(_elm_lang$core$List$map, _user$project$Views$schoolClassSelect, model.schoolClasses)),
												_1: {
													ctor: '::',
													_0: A2(
														_rundis$elm_bootstrap$Bootstrap_Form$label,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Number of groups'),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_rundis$elm_bootstrap$Bootstrap_Form_Select$custom,
															{
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$onInput(
																	_user$project$Views$customHandler(_user$project$Types$SelectNumberOfGroups)),
																_1: {ctor: '[]'}
															},
															A2(
																_elm_lang$core$List$map,
																_user$project$Views$numberSelect,
																A2(_elm_lang$core$List$range, 1, 10))),
														_1: {
															ctor: '::',
															_0: A2(
																_rundis$elm_bootstrap$Bootstrap_Form$label,
																{ctor: '[]'},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text('Max Students In Group'),
																	_1: {ctor: '[]'}
																}),
															_1: {
																ctor: '::',
																_0: A2(
																	_rundis$elm_bootstrap$Bootstrap_Form_Select$custom,
																	{
																		ctor: '::',
																		_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$onInput(
																			_user$project$Views$customHandler(_user$project$Types$SelectMaxStudentsInGroup)),
																		_1: {ctor: '[]'}
																	},
																	A2(
																		_elm_lang$core$List$map,
																		_user$project$Views$numberSelect,
																		A2(_elm_lang$core$List$range, 1, 10))),
																_1: {
																	ctor: '::',
																	_0: A2(
																		_rundis$elm_bootstrap$Bootstrap_Form$label,
																		{ctor: '[]'},
																		{
																			ctor: '::',
																			_0: _elm_lang$html$Html$text('Min Students In Group'),
																			_1: {ctor: '[]'}
																		}),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_rundis$elm_bootstrap$Bootstrap_Form_Select$custom,
																			{
																				ctor: '::',
																				_0: _rundis$elm_bootstrap$Bootstrap_Form_Select$onInput(
																					_user$project$Views$customHandler(_user$project$Types$SelectMinStudentsInGroup)),
																				_1: {ctor: '[]'}
																			},
																			A2(
																				_elm_lang$core$List$map,
																				_user$project$Views$numberSelect,
																				A2(_elm_lang$core$List$range, 1, 10))),
																		_1: {
																			ctor: '::',
																			_0: A2(
																				_elm_lang$html$Html$hr,
																				{ctor: '[]'},
																				{ctor: '[]'}),
																			_1: {
																				ctor: '::',
																				_0: A2(
																					_rundis$elm_bootstrap$Bootstrap_Grid$row,
																					{ctor: '[]'},
																					{
																						ctor: '::',
																						_0: A2(
																							_rundis$elm_bootstrap$Bootstrap_Grid$col,
																							{ctor: '[]'},
																							{
																								ctor: '::',
																								_0: A2(
																									_rundis$elm_bootstrap$Bootstrap_Form_Checkbox$custom,
																									{
																										ctor: '::',
																										_0: _rundis$elm_bootstrap$Bootstrap_Form_Checkbox$onCheck(_user$project$Types$ToggleMatrix),
																										_1: {ctor: '[]'}
																									},
																									'Toggle matrix'),
																								_1: {ctor: '[]'}
																							}),
																						_1: {
																							ctor: '::',
																							_0: A2(
																								_rundis$elm_bootstrap$Bootstrap_Grid$col,
																								{ctor: '[]'},
																								{
																									ctor: '::',
																									_0: A2(
																										_rundis$elm_bootstrap$Bootstrap_Button$button,
																										{
																											ctor: '::',
																											_0: _rundis$elm_bootstrap$Bootstrap_Button$secondary,
																											_1: {
																												ctor: '::',
																												_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																													{
																														ctor: '::',
																														_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$RandomizeGroups),
																														_1: {ctor: '[]'}
																													}),
																												_1: {ctor: '[]'}
																											}
																										},
																										{
																											ctor: '::',
																											_0: _elm_lang$html$Html$text('Shuffle groups'),
																											_1: {ctor: '[]'}
																										}),
																									_1: {ctor: '[]'}
																								}),
																							_1: {
																								ctor: '::',
																								_0: A2(
																									_rundis$elm_bootstrap$Bootstrap_Grid$col,
																									{ctor: '[]'},
																									{
																										ctor: '::',
																										_0: A2(
																											_rundis$elm_bootstrap$Bootstrap_Button$button,
																											{
																												ctor: '::',
																												_0: _rundis$elm_bootstrap$Bootstrap_Button$secondary,
																												_1: {
																													ctor: '::',
																													_0: _rundis$elm_bootstrap$Bootstrap_Button$attrs(
																														{
																															ctor: '::',
																															_0: _elm_lang$html$Html_Events$onClick(
																																_user$project$Types$Export(_rundis$elm_bootstrap$Bootstrap_Modal$visibleState)),
																															_1: {ctor: '[]'}
																														}),
																													_1: {ctor: '[]'}
																												}
																											},
																											{
																												ctor: '::',
																												_0: _elm_lang$html$Html$text('Export'),
																												_1: {ctor: '[]'}
																											}),
																										_1: {ctor: '[]'}
																									}),
																								_1: {ctor: '[]'}
																							}
																						}
																					}),
																				_1: {
																					ctor: '::',
																					_0: A2(
																						_elm_lang$html$Html$hr,
																						{ctor: '[]'},
																						{ctor: '[]'}),
																					_1: {
																						ctor: '::',
																						_0: A2(_user$project$Views$fullClassView, true, model),
																						_1: {
																							ctor: '::',
																							_0: A2(
																								_elm_lang$html$Html$hr,
																								{ctor: '[]'},
																								{ctor: '[]'}),
																							_1: {
																								ctor: '::',
																								_0: _user$project$Views$exportModal(model),
																								_1: {ctor: '[]'}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_rundis$elm_bootstrap$Bootstrap_Grid$col,
									{
										ctor: '::',
										_0: _rundis$elm_bootstrap$Bootstrap_Grid_Col$sm3,
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_rundis$elm_bootstrap$Bootstrap_Form$label,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Students'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: _user$project$Views$studentList(model.students),
											_1: {
												ctor: '::',
												_0: A2(
													_rundis$elm_bootstrap$Bootstrap_Form$label,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Removed Students'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: _user$project$Views$studentListRemoved(model.removedStudents),
													_1: {ctor: '[]'}
												}
											}
										}
									}),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Views$schoolClassOptions = function (schoolClass) {
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(schoolClass.name),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(schoolClass.name),
			_1: {ctor: '[]'}
		});
};
var _user$project$Views$schoolOptions = function (school) {
	return A2(
		_elm_lang$html$Html$option,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$value(school.name),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(school.name),
			_1: {ctor: '[]'}
		});
};
